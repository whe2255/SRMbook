@model SrmBook.Models.BookComposite

@{
    ViewData["Title"] = "Index";
    var Key = Context.Session.GetString("USER_SESSION_KEY");
    var admin = Context.Session.GetString("USER_TYPE_KEY");
}

<fieldset style="margin-top: 50px;">
    <legend>발주 내역</legend>
</fieldset>

@if (Key != null)
{
    @if(admin != "admin")
    {
    <p>
    <div style="margin-top: 30px;">
        <a class="btn btn-outline-light" asp-action="Create">발주</a>
    </div>
    </p>
    }
                //날짜별 제목별 검색
    @using (Html.BeginForm("Index", "BookOrder", FormMethod.Get))
    {
        <div>
            <p style="display: inline-block;">도서 제목으로 검색 :</p>
            <p style="display: inline-block;">
                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
            </p>
            <p style="display: inline-block;">
                <input class="form-control me-sm-2" type="submit" value="Search" />
            </p>
        </div>

        <div>
            <p style="display: inline-block;">날짜별로 검색 :</p>
            <p style="display: inline-block;">
                @Html.TextBox("searchDate", ViewBag.CurrentDate as string, new { @class = "datepicker form-control" })
            </p>
            <p style="display: inline-block;">
                <input class="form-control me-sm-2" type="submit" value="Search" />
            </p>
        </div>
    }
    <table style="margin-top: 10px;" class="table table-hover">
        <thead>
            <tr class="table-dark">
                <th scope="col">
                    @Html.DisplayNameFor(model => model.BookOrders.FirstOrDefault().USER_ID)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.BookOrders.FirstOrDefault().ORDER_DATE)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.BookOrders.FirstOrDefault().BOOK_QUANTITY)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.BookOrders.FirstOrDefault().TOTAL_PRICE)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.BookOrders.FirstOrDefault().BOOK_NAME)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.BookOrders.FirstOrDefault().BOOK_NUM)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.BookOrders)
            {
                if (item.USER_ID == Key || admin == "admin")//로그인한 사람만 보기 가능, 관리자는 전부 보기 가능
                {
                    <tr class="table-dark">
                        <td scope="row">
                            @Html.DisplayFor(modelItem => item.USER_ID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ORDER_DATE)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BOOK_QUANTITY)
                        </td>
                        @* 소수점 및 콤마 추가 *@
                        <td>
                            @{
                                decimal totalPrice = item.TOTAL_PRICE;
                                int totalPriceInt = Decimal.ToInt32(totalPrice);
                            }
                            @totalPriceInt.ToString("N0")
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BOOK_NAME)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BOOK_NUM)
                        </td>
                        <td>
                            <a class="btn btn-outline-light" asp-action="Details" asp-route-id="@item.ORDER_NUM">발주 세부정보</a>
                            @if (item.ORDER_CONFIRMED)//발주 확인됐을때 관리자만 취소 가능
                            {
                                <a style="margin-left: 5px;" class="text-success">발주 확인됨</a>
                                @if (admin == "admin")
                                {
                                    <a style="margin-left: 5px;" class="btn btn-outline-light" asp-action="Delete"
                                        asp-route-id="@item.ORDER_NUM">발주 취소</a>
                                }
                            }
                            else
                            {
                                @if (admin == "admin")
                                {
                                    <a class="btn btn-outline-light" asp-action="ConfirmOrder" asp-route-orderId="@item.ORDER_NUM">발주 확인</a>
                                }
                                <a style="margin-left: 5px;" class="btn btn-outline-light" asp-action="Delete"
                                    asp-route-id="@item.ORDER_NUM">발주 취소</a>
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

     <!-- 발주 페이징 -->
    @if (Model.OrderPageInfo.TotalPages > 1)
    {
        <div class="pagination">
            @if (Model.OrderPageInfo.CurrentPage > 1)
            {
                @Html.ActionLink("이전", "Index", new { orderPage = Model.OrderPageInfo.CurrentPage - 1 }, new { @class = "btn btn-outline-light" })
            }
            @if (Model.OrderPageInfo.CurrentPage < Model.OrderPageInfo.TotalPages)
            {
                @Html.ActionLink("다음", "Index", new { orderPage = Model.OrderPageInfo.CurrentPage + 1 }, new { @class = "btn btn-outline-light" })
            }
        </div>
    }


    <fieldset style="margin-top: 50px;">
        <legend>도서 재고</legend>
    </fieldset>

    @using (Html.BeginForm("Index", "BookOrder", FormMethod.Get))
    {
        <div>
            <p style="display: inline-block;">도서 제목으로 검색 :</p>
            <p style="display: inline-block;">
                @Html.TextBox("searchStr", ViewBag.CurrentFilter as string, new { @class = "form-control" })
            </p>
            <p style="display: inline-block;">
                <input class="form-control me-sm-2" type="submit" value="Search" />
            </p>
        </div>
    }
    //재고 테이블
    <table style="margin-top: 10px;" class="table table-hover">
        <thead>
            <tr class="table-dark">
                <th scope="col">
                    @Html.DisplayNameFor(model => model.BookInventory.FirstOrDefault().BOOK_NUM)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.BookInventory.FirstOrDefault().BOOK_CLASS)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.BookInventory.FirstOrDefault().BOOK_NAME)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.BookInventory.FirstOrDefault().BOOK_QUANTITY)
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Key != "null")//로그인한 사람만 보기 가능
            {
                @foreach (var item in Model.BookInventory)
                {
                    <tr class="table-dark">
                        <td>
                            @Html.DisplayFor(modelItem => item.BOOK_NUM)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BOOK_CLASS)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BOOK_NAME)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BOOK_QUANTITY)
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

      <!-- 재고 페이징 -->
    @if (Model.InventoryPageInfo.TotalPages > 1)
    {
        <div class="pagination">
            @if (Model.InventoryPageInfo.CurrentPage > 1)
            {
                @Html.ActionLink("이전", "Index", new { inventoryPage = Model.InventoryPageInfo.CurrentPage - 1 }, new { @class = "btn btn-outline-light" })
            }
            @if (Model.InventoryPageInfo.CurrentPage < Model.InventoryPageInfo.TotalPages)
            {
                @Html.ActionLink("다음", "Index", new { inventoryPage = Model.InventoryPageInfo.CurrentPage + 1 }, new { @class = "btn btn-outline-light" })
            }
        </div>
    }


    //datepicker
    @section Scripts
    {
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        $(function () {
            $(".datepicker").datepicker();
        });
    </script>
}
}